## 寻找两个有序数组的中位数

给定两个大小为`m`和`n`的有序数组`nums1`和`nums2`。
请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为`O(log(m+n))`。
你可以假设`nums1`和`nums2`不会同时为空。

### 示例1：

```
nums1 = [1, 3]
nums2 = [2]
则中位数是 2.0
```
### 示例2：

```
nums1 = [1, 2]
nums2 = [3, 4]
则中位数是 (2 + 3)/2 = 2.5
```
### 题解（Java）：

```java
class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        
        int len = nums1.length + nums2.length;
        int res[] = MergeList(nums1, nums2);
        int mid = (len - 1) / 2;
        double result;
        if (len % 2 == 0) {
            return result = (double)(res[mid] + res[mid + 1]) / 2.0;
        } else {
            return result = res[mid];
        }

        
    }

    private static int[] MergeList(int[] a,int[] b)
    {
        int result[];  
        result = new int[a.length+b.length];
        int i=0,j=0,k=0;
        while(i<a.length && j<b.length){
            if (a[i] <= b[j]) {
                result[k++] = a[i++];
            } else {
                result[k++] = b[j++];
            }
        }
    
        while(i < a.length) 
            result[k++] = a[i++];
        while(j < b.length)
            result[k++] = b[j++];
        return result;
    }
}
```

